addpath('PCHA/');
addpath('PDHG/');
rng('default');  % seed random number generator

% Runs a series of tests for differently randomly generated data. Each of
% the data sets are generated as the interior of a multidimensional cube
% generated by three vectors. Ten sets are generated and tested for each
% dimension. 

Morup_err = zeros(100, 10);
PDHG_err = zeros(100, 10);
data_dim = zeros(100,1);
Morup_constraints = zeros(100,10);
PDHG_constraints = zeros(100,10);

tol = eps;
% AA Parameters
noc=8; % Number of archetypes

delta=0;

opts.maxiter=5000;
opts.conv_crit=1e-6;


for j=1:100
    data_dim(j) = j*20+50000;
    for k = 1:10
        num_datapts = 1000;

        X = zeros(data_dim(j),num_datapts);

        % generate multidimensional cube vectors
        mu = mvnrnd(zeros(data_dim(j),1),eye(data_dim(j)),3);

        % create a convex combinaion of the vectors
        for i = 1:num_datapts
            lambda1 = rand(1,1);
            lambda2 = rand(1,1);
            while((lambda1 + lambda2) >1)
                lambda1 = rand(1,1);
                lambda2 = rand(1,1);
            end
            lambda3 = 1 - lambda1 - lambda2;

            X(:,i) = lambda1*mu(1,:)' + ...
                lambda2*mu(2,:)' + ...
                lambda3*mu(3,:)';
        end

%         save(strcat('DATASETS/PDHG_TRIALS/', num2str(dim_data), 'dim_', ... 
%             num2str(num_datapts), 'pt_3orthogveccubeconvexint_', ...
%             num2str(k)), 'X');

        U=1:size(X,2); % Entries in X used that is modelled by the AA model
        I=1:size(X,2); % Entries in X used to define archetypes
        % if two expensive to useall entries for I find N relevant observations by
        % the following procedure:
        % N=100;
        % I=FurthestSum(X,N,ceil(rand*size(X,2)));

        % Use PCHA.m
        [XC,S,C,SSE,varexpl, SSE_array, varexpl_array]=PCHA(X,noc,I,U,delta,opts);

        Morup_err(j,k) = norm(X-X*C*S,'fro')^2;
        Morup_constraints(j,k) = (abs(sum(sum(C,1)) - noc) < noc*tol) && ... 
            (abs(sum(sum(S,1)) - num_datapts) < num_datapts*tol) && ...
            (abs(sum(sum(C < 0))) < tol) && ...
            (abs(sum(sum(S < 0))) < tol);
        
        % Use PDHG
        [XB,A,B,SSE,varexpl, SSE_array, varexpl_array]=PCHA_PDHG(X,noc,I,U,delta,opts);
        
        PDHG_err(j,k) = norm(X-X*B*A,'fro')^2;
        PDHG_constraints(j,k) = (abs(sum(sum(B,1)) - noc) < noc*tol) && ... 
            (abs(sum(sum(A,1)) - num_datapts) < num_datapts*tol) && ...
            (abs(sum(sum(B < 0))) < tol) && ...
            (abs(sum(sum(A < 0))) < tol);
    end
end

save('RESULTS/PCHA_PDHG/MORUP_PDHG_3orthogcubeint_8AA_50000_52000_constraints.mat', 'Morup_err', 'PDHG_err', 'data_dim', 'Morup_constraints', 'PDHG_constraints');